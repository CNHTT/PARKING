<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.extra.dao.ParkingDao">

    <select id="selectParkingLotList" resultType="com.extra.model.ParkingLotBean">
        SELECT  * FROM parking_lot
        WHERE companyUuid = #{companyUUID}
    </select>
    <select id="selectParkingLotByUUID" resultType="com.extra.model.ParkingLotBean">
        SELECT  * FROM parking_lot
        WHERE uuid = #{parkingUuid}
    </select>


    <select id="selectParkingLotCount" parameterType="java.lang.String" resultType="java.lang.Integer" >
        SELECT count(*) FROM  parking_lot WHERE  companyUuid = #{companyUuid}
    </select>


    <insert id="insertParkingLot" parameterType="com.extra.model.ParkingLotBean">
        <selectKey  keyProperty="id" resultType="java.lang.Long" order="AFTER">
            SELECT  LAST_INSERT_ID()
        </selectKey>
        INSERT  INTO  parking_lot(name,number,company,address,entryAddress,principal,contactNumber,area,quantity,uuid,companyUuid,addMangerUuid)
        VALUES (#{name},#{number},#{company},#{address},#{entryAddress},#{principal},#{contactNumber},#{area},#{quantity},#{uuid},#{companyUuid},#{addMangerUuid})
    </insert>





    <select id="selectParkingRecordAllList" resultType="com.extra.model.ParkingRecordBean">
          SELECT
              park_parking.tsn,
              park_parking.memberUuid,
              park_member.name as memberName,
              park_member.lpm  as memberLpm,
              park_parking.amount,
              enterTime,exitTime,
              parkingTime,
              parking_lot.number AS parkingLotName,
              park_parking.parkingUuid

            FROM park_parking LEFT OUTER JOIN park_member ON park_parking.memberUuid = park_member.uuid

              LEFT OUTER JOIN  parking_lot ON  park_parking.parkingUuid = parking_lot.uuid
            WHERE park_parking.companyUuid = #{companyUUID} ORDER BY park_parking.id DESC
          </select>

    <select id="selectParkingRecordByLpmAllList" resultType="com.extra.model.ParkingRecordBean">
          SELECT
              park_parking.tsn,
              park_parking.memberUuid,
              park_member.name as memberName,
              park_member.lpm  as memberLpm,
              park_parking.amount,
              enterTime,exitTime,
              parkingTime,
              parking_lot.number AS parkingLotName,
              park_parking.parkingUuid

            FROM park_parking LEFT OUTER JOIN park_member ON park_parking.memberUuid = park_member.uuid

              LEFT OUTER JOIN  parking_lot ON  park_parking.parkingUuid = parking_lot.uuid
            WHERE park_parking.companyUuid = #{companyUUID} AND park_member.lpm = #{lpm} ORDER BY park_parking.id DESC
          </select>

    <select id="selectParkingUndoneAllList" resultType="com.extra.model.ParkingRecordBean">
          SELECT
              park_parking.tsn,
              park_parking.memberUuid,
              park_member.name as memberName,
              park_member.lpm  as memberLpm,
              park_parking.amount,
              enterTime,exitTime,
              parkingTime,
              parking_lot.number AS parkingLotName,
              park_parking.parkingUuid

            FROM park_parking LEFT OUTER JOIN park_member ON park_parking.memberUuid = park_member.uuid

              LEFT OUTER JOIN  parking_lot ON  park_parking.parkingUuid = parking_lot.uuid
            WHERE park_parking.companyUuid = #{companyUUID} AND type = 1 ORDER BY park_parking.id DESC
          </select>

    <select id="selectParkingUndoneByLpmList" resultType="com.extra.model.ParkingRecordBean">
          SELECT
              park_parking.tsn,
              park_parking.memberUuid,
              park_member.name as memberName,
              park_member.lpm  as memberLpm,
              park_parking.amount,
              enterTime,exitTime,
              parkingTime,
              parking_lot.number AS parkingLotName,
              park_parking.parkingUuid

            FROM park_parking LEFT OUTER JOIN park_member ON park_parking.memberUuid = park_member.uuid

              LEFT OUTER JOIN  parking_lot ON  park_parking.parkingUuid = parking_lot.uuid
            WHERE park_parking.companyUuid = #{companyUUID} AND type = 0 AND park_member.lpm = #{lpm} ORDER BY park_parking.id DESC
          </select>
    <select id="selectParkingCompletedAllList" resultType="com.extra.model.ParkingRecordBean">
          SELECT
              park_parking.tsn,
              park_parking.memberUuid,
              park_member.name as memberName,
              park_member.lpm  as memberLpm,
              park_parking.amount,
              enterTime,exitTime,
              parkingTime,
              parking_lot.number AS parkingLotName,
              park_parking.parkingUuid

            FROM park_parking LEFT OUTER JOIN park_member ON park_parking.memberUuid = park_member.uuid

              LEFT OUTER JOIN  parking_lot ON  park_parking.parkingUuid = parking_lot.uuid
            WHERE park_parking.companyUuid = #{companyUUID} AND type = 1 ORDER BY park_parking.id DESC
          </select>

    <select id="selectParkingCompletedByLpmList" resultType="com.extra.model.ParkingRecordBean">
          SELECT
              park_parking.tsn,
              park_parking.memberUuid,
              park_member.name as memberName,
              park_member.lpm  as memberLpm,
              park_parking.amount,
              enterTime,exitTime,
              parkingTime,
              parking_lot.number AS parkingLotName,
              park_parking.parkingUuid

            FROM park_parking LEFT OUTER JOIN park_member ON park_parking.memberUuid = park_member.uuid

              LEFT OUTER JOIN  parking_lot ON  park_parking.parkingUuid = parking_lot.uuid
            WHERE park_parking.companyUuid = #{companyUUID} AND type = 0 AND park_member.lpm = #{lpm} ORDER BY park_parking.id DESC
          </select>


    <select id="selectParkingRecordByMemberUUID" resultType="com.extra.model.ParkingRecordBean">
        SELECT
              park_parking.tsn,
              park_parking.memberUuid,
              park_member.name as memberName,
              park_member.lpm  as memberLpm,
              park_parking.operateUuid,
              park_parking.memberUuid AS memberUuid,
              park_manager.number as operateNumber,
              park_device.number  as deviceNumber,
              park_member.email as email,
              park_member.phone as phone,
              park_parking.amount,
              enterTime,exitTime,
              enterLongTime,
              parkingTime,
              parking_lot.number AS parkingLotName,
              park_parking.parkingUuid

            FROM park_parking LEFT OUTER JOIN park_member ON park_parking.memberUuid = park_member.uuid

              LEFT OUTER JOIN  parking_lot ON  park_parking.parkingUuid = parking_lot.uuid
              LEFT OUTER JOIN  park_device ON  park_parking.deviceSn = park_device.sn
              LEFT OUTER JOIN  park_manager ON  park_parking.operateUuid = park_manager.UUID
            WHERE park_parking.memberUuid = #{uuid} and  to_days(park_parking.createTime)   = to_days(left(date_add(now(),INTERVAL -6 HOUR),20))  ORDER BY park_parking.id DESC  LIMIT 0, 10
    </select>

    <select id="selectParkingRecordByMemberPrintUUID" resultType="com.extra.model.ParkingRecordBean">
     SELECT
  park_parking.tsn,
  park_parking.memberUuid,
  park_member.name as memberName,
  park_member.lpm  as memberLpm,
  park_parking.operateUuid,
  park_parking.memberUuid AS memberUuid,
  park_manager.number as operateNumber,
  park_device.number  as deviceNumber,
  park_member.email as email,
  park_member.phone as phone,
  park_parking.amount,
  enterTime,exitTime,
  enterLongTime,
  parkingTime,
  parking_lot.number AS parkingLotName,
  park_parking.parkingUuid,
  park_consumption.aAmount,
  park_consumption.bAmount

FROM park_parking LEFT OUTER JOIN park_member ON park_parking.memberUuid = park_member.uuid

  LEFT OUTER JOIN  parking_lot ON  park_parking.parkingUuid = parking_lot.uuid
  LEFT OUTER JOIN  park_device ON  park_parking.deviceSn = park_device.sn
  LEFT OUTER JOIN  park_manager ON  park_parking.operateUuid = park_manager.UUID
  LEFT OUTER JOIN  park_consumption ON  park_parking.tsn = park_consumption.tsn
WHERE park_parking.companyUuid = #{uuid}   ORDER BY park_parking.id DESC LIMIT 0, 10
    </select>
    <select id="loadParkingRecordForUUID" resultType="com.extra.model.ParkingRecordBean">
     SELECT
  park_parking.tsn,
  park_parking.memberUuid,
  park_member.name as memberName,
  park_member.lpm  as memberLpm,
  park_parking.operateUuid,
  park_parking.memberUuid AS memberUuid,
  park_manager.number as operateNumber,
  park_device.number  as deviceNumber,
  park_member.email as email,
  park_member.phone as phone,
  park_parking.amount,
  enterTime,exitTime,
  enterLongTime,
  parkingTime,
  parking_lot.number AS parkingLotName,
  park_parking.parkingUuid,
  park_consumption.aAmount,
  park_consumption.bAmount

FROM park_parking LEFT OUTER JOIN park_member ON park_parking.memberUuid = park_member.uuid

  LEFT OUTER JOIN  parking_lot ON  park_parking.parkingUuid = parking_lot.uuid
  LEFT OUTER JOIN  park_device ON  park_parking.deviceSn = park_device.sn
  LEFT OUTER JOIN  park_manager ON  park_parking.operateUuid = park_manager.UUID
  LEFT OUTER JOIN  park_consumption ON  park_parking.tsn = park_consumption.tsn
WHERE park_parking.memberUuid = #{uuid}   ORDER BY park_parking.id DESC LIMIT 0, 10
    </select>

    <insert id="insertParkingRecord" parameterType="com.extra.model.ParkingRecordBean">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

        INSERT INTO  park_parking(
        tsn, type, memberUuid,
        operateUuid, deviceSn, companyUuid,
        amount, enterLongTime, exitLongTime,
        parkingTime, intTime, enterTime,
        exitTime, createTime,parkingUuid
        )
        VALUES
        (
          #{tsn},#{type},#{memberUuid},
          #{operateUuid},#{deviceSN},#{companyUuid},
          #{amount},#{enterLongTime},#{exitLongTime},
          #{parkingTime},#{intTime},#{enterTime},
          #{exitTime},#{createTime},#{parkingUuid}
        )
    </insert>


    <insert id="insertParkingRecordList" parameterType="java.util.List">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

        INSERT INTO  park_parking(
        tsn, type, memberUuid,
        operateUuid, deviceSn, companyUuid,
        amount, enterLongTime, exitLongTime,
        parkingTime, intTime, enterTime,
        exitTime, createTime,parkingUuid
        )

        VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
          #{item.tsn},#{item.type},#{item.memberUuid},
          #{item.operateUuid},#{item.deviceSN},#{item.companyUuid},
          #{item.amount},#{item.enterLongTime},#{item.exitLongTime},
          #{item.parkingTime},#{item.intTime},#{item.enterTime},
          #{item.exitTime},#{item.createTime},#{item.parkingUuid}
            )
        </foreach>
    </insert>


    <insert id="insertParkingEntry" parameterType="com.extra.model.ParkingRecordBean">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

        INSERT INTO  park_parking(
        tsn, type, memberUuid,
        operateUuid, deviceSn, companyUuid,
        enterLongTime, enterTime,createTime,parkingUuid
        )
        VALUES
        (
          #{tsn},#{type},#{memberUuid},
          #{operateUuid},#{deviceSN},#{companyUuid},
          #{enterLongTime},#{enterTime},#{createTime},#{parkingUuid}
        )
    </insert>


    <insert id="insertParkingRecordEntryList" parameterType="java.util.List">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

        INSERT INTO  park_parking(
        tsn, type, memberUuid,
        operateUuid, deviceSn, companyUuid,
        enterLongTime, enterTime,createTime,parkingUuid
        )

        VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
          #{item.tsn},#{item.type},#{item.memberUuid},
          #{item.operateUuid},#{item.deviceSN},#{item.companyUuid},
          #{item.enterLongTime},#{item.enterTime},#{item.createTime},#{item.parkingUuid}
            )
        </foreach>
    </insert>





</mapper>